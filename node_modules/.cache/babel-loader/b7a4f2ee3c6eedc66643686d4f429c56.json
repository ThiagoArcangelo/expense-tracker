{"ast":null,"code":"export const getCurrentMonth = () => {\n  let now = new Date();\n  return `${now.getFullYear()}-${now.getMonth() + 1}`;\n};\nexport const filterListByMonth = (list, date) => {\n  let newList = [];\n  let [year, month] = date.split('-');\n\n  for (let i in list) {\n    if (list[i].date.getFullYear() === parseInt(year) && list[i].date.getMonth() + 1 === parseInt(month)) {\n      newList.push(list[i]);\n    }\n  }\n\n  return newList;\n};\nexport const formatDate = date => {\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  return `${addZeroToDate(day)}/${addZeroToDate(month)}/${year}`;\n};\n\nconst addZeroToDate = n => n < 10 ? `0${n}` : `${n}`;","map":{"version":3,"sources":["/home/thiago/Documentos/Projetos/B7Web/projetos-reactjs/finanÃ§as/expense-tracker/src/helpers/dateFilter.ts"],"names":["getCurrentMonth","now","Date","getFullYear","getMonth","filterListByMonth","list","date","newList","year","month","split","i","parseInt","push","formatDate","day","getDate","addZeroToDate","n"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG,MAAM;AACjC,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,SAAQ,GAAED,GAAG,CAACE,WAAJ,EAAkB,IAAGF,GAAG,CAACG,QAAJ,KAAe,CAAE,EAAhD;AACH,CAHM;AAKP,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAeC,IAAf,KAAwC;AACrE,MAAIC,OAAe,GAAG,EAAtB;AACA,MAAI,CAACC,IAAD,EAAOC,KAAP,IAAgBH,IAAI,CAACI,KAAL,CAAW,GAAX,CAApB;;AAEA,OAAI,IAAIC,CAAR,IAAaN,IAAb,EAAmB;AACf,QACIA,IAAI,CAACM,CAAD,CAAJ,CAAQL,IAAR,CAAaJ,WAAb,OAA+BU,QAAQ,CAACJ,IAAD,CAAvC,IACCH,IAAI,CAACM,CAAD,CAAJ,CAAQL,IAAR,CAAaH,QAAb,KAA0B,CAA3B,KAAkCS,QAAQ,CAACH,KAAD,CAF9C,EAGE;AACEF,MAAAA,OAAO,CAACM,IAAR,CAAaR,IAAI,CAACM,CAAD,CAAjB;AACH;AACJ;;AAED,SAAOJ,OAAP;AACH,CAdM;AAgBP,OAAO,MAAMO,UAAU,GAAIR,IAAD,IAAwB;AAC9C,MAAIE,IAAI,GAAGF,IAAI,CAACJ,WAAL,EAAX;AACA,MAAIO,KAAK,GAAGH,IAAI,CAACH,QAAL,KAAkB,CAA9B;AACA,MAAIY,GAAG,GAAGT,IAAI,CAACU,OAAL,EAAV;AAEA,SAAQ,GAAEC,aAAa,CAACF,GAAD,CAAM,IAAGE,aAAa,CAACR,KAAD,CAAQ,IAAGD,IAAK,EAA7D;AACH,CANM;;AAQP,MAAMS,aAAa,GAAIC,CAAD,IAAuBA,CAAC,GAAG,EAAJ,GAAU,IAAGA,CAAE,EAAf,GAAoB,GAAEA,CAAE,EAArE","sourcesContent":["import { Item } from '../types/Item';\n\nexport const getCurrentMonth = () => {\n    let now = new Date();\n    return `${now.getFullYear()}-${now.getMonth()+1}`;\n}\n\nexport const filterListByMonth = (list: Item[], date: string): Item[] => {\n    let newList: Item[] = [];\n    let [year, month] = date.split('-');\n\n    for(let i in list) {\n        if(\n            list[i].date.getFullYear() === parseInt(year) &&\n            (list[i].date.getMonth() + 1) === parseInt(month)\n        ) {\n            newList.push(list[i]);\n        }\n    }\n\n    return newList;\n}\n\nexport const formatDate = (date: Date): string => {\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n\n    return `${addZeroToDate(day)}/${addZeroToDate(month)}/${year}`;\n}\n\nconst addZeroToDate = (n: number): string => n < 10 ? `0${n}` : `${n}`;"]},"metadata":{},"sourceType":"module"}