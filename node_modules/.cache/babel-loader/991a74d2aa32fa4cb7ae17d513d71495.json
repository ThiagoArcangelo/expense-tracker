{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Projetos/B7Web/projetos-reactjs/finan\\xE7as/expense-tracker/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport * as C from './App.styles';\nimport { categories } from './data/categories';\nimport { items } from './data/items';\nimport { getCurrentMonth, filterListByMonth } from './helpers/dateFilter';\nimport { TableArea } from './components/tableArea';\nimport { InfoArea } from './components/InfoArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [list, setList] = useState(items);\n  const [filteredList, setFilteredList] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(getCurrentMonth());\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n  useEffect(() => {\n    setFilteredList(filterListByMonth(list, currentMonth));\n  }, [list, currentMonth]);\n  useEffect(() => {\n    let income = 0;\n    let expense = 0;\n\n    for (let i in filteredList) {\n      if (categories[filteredList[i].category].expense) {\n        expense += filteredList[i].value;\n      } else {\n        income += filteredList[i].value;\n      }\n    }\n\n    setIncome(income);\n    setExpense(expense);\n  }, [filteredList]);\n\n  const handleMonthChange = newMonth => {\n    setCurrentMonth(newMonth);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(C.Header, {\n      children: /*#__PURE__*/_jsxDEV(C.HeaderText, {\n        children: \"Sistema Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(C.Body, {\n      children: [/*#__PURE__*/_jsxDEV(InfoArea, {\n        currentMonth: currentMonth,\n        onMonthChange: handleMonthChange,\n        income: income,\n        expense: expense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableArea, {\n        list: filteredList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"iDo0GUT5sJXJH9SDeWU0xjYbiB0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/thiago/Documentos/Projetos/B7Web/projetos-reactjs/finanças/expense-tracker/src/App.tsx"],"names":["useState","useEffect","C","categories","items","getCurrentMonth","filterListByMonth","TableArea","InfoArea","App","list","setList","filteredList","setFilteredList","currentMonth","setCurrentMonth","income","setIncome","expense","setExpense","i","category","value","handleMonthChange","newMonth"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,KAAKC,CAAZ,MAAmB,cAAnB;AAGA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,sBAAnD;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACI,KAAD,CAAhC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAS,EAAT,CAAhD;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAACK,eAAe,EAAhB,CAAhD;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,eAAe,CAACP,iBAAiB,CAACI,IAAD,EAAOI,YAAP,CAAlB,CAAf;AACD,GAFQ,EAEN,CAACJ,IAAD,EAAOI,YAAP,CAFM,CAAT;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,MAAM,GAAG,CAAb;AACA,QAAIE,OAAO,GAAG,CAAd;;AAEA,SAAI,IAAIE,CAAR,IAAaR,YAAb,EAA2B;AACzB,UAAGT,UAAU,CAACS,YAAY,CAACQ,CAAD,CAAZ,CAAgBC,QAAjB,CAAV,CAAqCH,OAAxC,EAAgD;AAC9CA,QAAAA,OAAO,IAAIN,YAAY,CAACQ,CAAD,CAAZ,CAAgBE,KAA3B;AACD,OAFD,MAEO;AACLN,QAAAA,MAAM,IAAIJ,YAAY,CAACQ,CAAD,CAAZ,CAAgBE,KAA1B;AACD;AACF;;AAEDL,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,IAAAA,UAAU,CAACD,OAAD,CAAV;AAED,GAfQ,EAeN,CAACN,YAAD,CAfM,CAAT;;AAiBA,QAAMW,iBAAiB,GAAIC,QAAD,IAAsB;AAC9CT,IAAAA,eAAe,CAACS,QAAD,CAAf;AACD,GAFD;;AAIA,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,4BACE,QAAC,CAAD,CAAG,MAAH;AAAA,6BACE,QAAC,CAAD,CAAG,UAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,CAAD,CAAG,IAAH;AAAA,8BAEA,QAAC,QAAD;AACE,QAAA,YAAY,EAAEV,YADhB;AAEE,QAAA,aAAa,EAAES,iBAFjB;AAGE,QAAA,MAAM,EAAEP,MAHV;AAIE,QAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,cAFA,eAWA,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEN;AAAjB;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAtDD;;GAAMH,G;;KAAAA,G;AAwDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport * as C from './App.styles';\nimport { Item } from './types/Item';\nimport { Category } from './types/Category';\nimport { categories } from './data/categories';\nimport { items } from './data/items';\nimport { getCurrentMonth, filterListByMonth } from './helpers/dateFilter';\nimport { TableArea } from './components/tableArea';\nimport { InfoArea } from './components/InfoArea';\n\nconst App = ()=> {  \n  const [list, setList] = useState(items);\n  const [filteredList, setFilteredList] = useState<Item[]>([]);\n  const [currentMonth, setCurrentMonth] = useState(getCurrentMonth());\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n\n  useEffect(() => {\n    setFilteredList(filterListByMonth(list, currentMonth));\n  }, [list, currentMonth]);\n\n  useEffect(() => {\n    let income = 0;\n    let expense = 0;\n\n    for(let i in filteredList) {\n      if(categories[filteredList[i].category].expense){\n        expense += filteredList[i].value;\n      } else {\n        income += filteredList[i].value;\n      }\n    }\n\n    setIncome(income);\n    setExpense(expense);\n\n  }, [filteredList])\n\n  const handleMonthChange = (newMonth: string) => {\n    setCurrentMonth(newMonth);\n  }\n\n  return (\n    <C.Container>\n      <C.Header>\n        <C.HeaderText>Sistema Financeiro</C.HeaderText>\n      </C.Header>\n      <C.Body>\n         \n      <InfoArea \n        currentMonth={currentMonth} \n        onMonthChange={handleMonthChange}\n        income={income}\n        expense={expense}\n      />\n\n      {/* Area de inserção  */}\n\n      <TableArea list={filteredList}/>\n      \n\n      </C.Body>\n    </C.Container>\n  );\n}   \n\nexport default App;"]},"metadata":{},"sourceType":"module"}