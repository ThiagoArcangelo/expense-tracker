{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documentos/Projetos/B7Web/projetos-reactjs/finan\\xE7as/expense-tracker/src/components/InputArea/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport * as C from './styles';\nimport { categories } from '../../data/categories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputArea = ({\n  onAdd\n}) => {\n  _s();\n\n  const [dateField, setDateField] = useState('');\n  const [categoryField, setCategoryField] = useState('');\n  const [titleField, setTitleField] = useState('');\n  const [valueField, setValueField] = useState(0);\n  let categoryKeys = Object.keys(categories);\n\n  const handleAddEvent = () => {\n    let errors = [];\n\n    if (isNaN(new Date(dateField).getTime())) {\n      errors.push('Data inválida!');\n    }\n\n    if (!categoryKeys.includes(categoryField)) {\n      errors.push('Categoria inválida!');\n    }\n\n    if (titleField === '') {\n      errors.push('Título vazio!');\n    }\n\n    if (valueField <= 0) {\n      errors.push('Valor inválido!');\n    }\n\n    if (errors.length > 0) {\n      alert(errors.join('\\n'));\n    } else {\n      onAdd({\n        date: new Date(dateField),\n        category: categoryField,\n        title: titleField,\n        value: valueField\n      });\n      clearFields();\n    }\n  };\n\n  const clearFields = () => {\n    setDateField('');\n    setCategoryField('');\n    setTitleField('');\n    setValueField(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddItem,\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputArea, \"j/nL+2v1OETSOd5B+SluQuYteu0=\");\n\n_c = InputArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputArea\");","map":{"version":3,"sources":["/home/thiago/Documentos/Projetos/B7Web/projetos-reactjs/finanças/expense-tracker/src/components/InputArea/index.tsx"],"names":["useState","C","categories","InputArea","onAdd","dateField","setDateField","categoryField","setCategoryField","titleField","setTitleField","valueField","setValueField","categoryKeys","Object","keys","handleAddEvent","errors","isNaN","Date","getTime","push","includes","length","alert","join","date","category","title","value","clearFields","handleAddItem"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAGA,SAASC,UAAT,QAA2B,uBAA3B;;AAMA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAAA;;AAEzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,UAAD,EAAcC,aAAd,IAA+BZ,QAAQ,CAAC,CAAD,CAA7C;AAEA,MAAIa,YAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYb,UAAZ,CAA7B;;AAEA,QAAMc,cAAc,GAAG,MAAM;AACzB,QAAIC,MAAgB,GAAG,EAAvB;;AAEA,QAAGC,KAAK,CAAC,IAAIC,IAAJ,CAASd,SAAT,EAAoBe,OAApB,EAAD,CAAR,EAAwC;AACpCH,MAAAA,MAAM,CAACI,IAAP,CAAY,gBAAZ;AACH;;AACD,QAAG,CAACR,YAAY,CAACS,QAAb,CAAsBf,aAAtB,CAAJ,EAAyC;AACrCU,MAAAA,MAAM,CAACI,IAAP,CAAY,qBAAZ;AACH;;AACD,QAAGZ,UAAU,KAAK,EAAlB,EAAsB;AAClBQ,MAAAA,MAAM,CAACI,IAAP,CAAY,eAAZ;AACH;;AACD,QAAGV,UAAU,IAAI,CAAjB,EAAoB;AAChBM,MAAAA,MAAM,CAACI,IAAP,CAAY,iBAAZ;AACH;;AAED,QAAGJ,MAAM,CAACM,MAAP,GAAgB,CAAnB,EAAsB;AAClBC,MAAAA,KAAK,CAACP,MAAM,CAACQ,IAAP,CAAY,IAAZ,CAAD,CAAL;AACH,KAFD,MAEO;AACHrB,MAAAA,KAAK,CAAC;AACFsB,QAAAA,IAAI,EAAE,IAAIP,IAAJ,CAASd,SAAT,CADJ;AAEFsB,QAAAA,QAAQ,EAAEpB,aAFR;AAGFqB,QAAAA,KAAK,EAAEnB,UAHL;AAIFoB,QAAAA,KAAK,EAAElB;AAJL,OAAD,CAAL;AAMAmB,MAAAA,WAAW;AACd;AACJ,GA3BD;;AA6BA,QAAMA,WAAW,GAAG,MAAM;AACtBxB,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,aAAa,CAAC,CAAD,CAAb;AACH,GALD;;AAOA,sBACI,QAAC,CAAD,CAAG,SAAH;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAEmB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlDM;;GAAM5B,S;;KAAAA,S","sourcesContent":["import { useState } from 'react';\nimport * as C from './styles';\nimport { Item } from '../../types/Item';\n\nimport { categories } from '../../data/categories';\n\ntype Props = {\n    onAdd: (item: Item) => void;\n}\n\nexport const InputArea = ({onAdd}: Props) => {\n\n    const [dateField, setDateField] = useState('');\n    const [categoryField, setCategoryField] = useState('');\n    const [titleField, setTitleField] = useState('');\n    const [valueField , setValueField] = useState(0);\n\n    let categoryKeys: string[] = Object.keys(categories);\n\n    const handleAddEvent = () => {\n        let errors: string[] = [];\n\n        if(isNaN(new Date(dateField).getTime())){\n            errors.push('Data inválida!');\n        }\n        if(!categoryKeys.includes(categoryField)){\n            errors.push('Categoria inválida!');\n        } \n        if(titleField === '') {\n            errors.push('Título vazio!');\n        }\n        if(valueField <= 0) {\n            errors.push('Valor inválido!')\n        }\n\n        if(errors.length > 0) {\n            alert(errors.join('\\n'));\n        } else {\n            onAdd({\n                date: new Date(dateField),\n                category: categoryField,\n                title: titleField,\n                value: valueField\n            });\n            clearFields();\n        }\n    }\n\n    const clearFields = () => {\n        setDateField('');\n        setCategoryField('');\n        setTitleField('');\n        setValueField(0);\n    }\n\n    return (\n        <C.Container> \n            <button onClick={handleAddItem}>Adicionar</button>\n        </C.Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}